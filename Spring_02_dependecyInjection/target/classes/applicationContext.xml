<?xml version="1.0" encoding="UTF-8"?>
<beans  xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:context="http://www.springframework.org/schema/context"
        xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

    <context:property-placeholder location="classpath:musicPlayer.properties"/>

    <bean id="musicBean"
          class="com.miftakhov.spring.RockMusic">
    </bean>

    <bean id="rockMusicBean"
          class="com.miftakhov.spring.RockMusic">
    </bean>

    <bean id="classicMusicBean"
          class="com.miftakhov.spring.ClassicalMusic">
    </bean>

    <bean id="popMusicBean"
          class="com.miftakhov.spring.PopMusic">
    </bean>

    <!--создание бина через конструктор -->
    <bean id="musicPlayer"
        class="com.miftakhov.spring.MusicPlayer">
        <constructor-arg ref="musicBean"/>
    </bean>

    <!--создание бина через Setter -->
    <bean id="musicPlayerSetter"
          class="com.miftakhov.spring.MusicPlayer">
        <property name="music" ref="musicBean"/>
        <property name="name" value="Sony"/>
        <property name="volume" value="12"/>
    </bean>

    <!--создание бина через Setter -->
    <bean id="musicPlayerFile"
          class="com.miftakhov.spring.MusicPlayer">
        <property name="music" ref="musicBean"/>

        <property name="name" value="${musicPlayer.name}"/>
        <property name="volume" value="${musicPlayer.volume}"/>
    </bean>

    <bean id="musiPlayerList"
          class="com.miftakhov.spring.MusicPlayer">
        <property name="playList">
            <list value-type="java.util.List">
                <ref bean="rockMusicBean"/>
                <ref bean="classicMusicBean"/>
                <ref bean="popMusicBean"/>
            </list>
        </property>
    </bean>

    <bean id="musicPlayerPrototype"
          class="com.miftakhov.spring.MusicPlayer"
          scope="prototype">
        <constructor-arg ref="musicBean"/>
    </bean>


    <!--
        init и destroy методы вызываются при инициализации бина
        destroy только для синглтонов, для прототипа не вызывается.
        init - каждый раз при инициализации бина (если синглтон - 1 раз, прототип - каждый раз)
        Методы не должны принимать никаких аргументов!
        factory-method - нужен для реализации фабричного метода (см код класса тк приватный коструктор)
        несмотря на фабричный метод scope все еще синглтон и все объекты будут ссылаться на один.
        -->

    <bean id="musicBean2"
          class="com.miftakhov.spring.SwingMusic"
          init-method="doMyInit"
          destroy-method="doMyDestroy"
          factory-method="getSwingMusic">
    </bean>

</beans>